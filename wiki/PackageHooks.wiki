#summary Me sorting out what the differences between deb and rpm package hooks are.

From an [http://fedoraproject.org/wiki/Packaging/ScriptletSnippets RPM reference] and a [http://www.debian.org/doc/debian-policy/ch-maintainerscripts.html DEB reference], I cobbled together this understanding.

= Updates =

|| RPM || DEB ||
||  %pretrans of new package || old-prerm upgrade new-version ||
||  %pre of new package || new-preinst upgrade old-version ||
|| _new package installed_ || _new package files unpacked_ ||
|| %post of new package || - ||
|| %preun of old package || old-postrm upgrade new-version [[#1 1]]  || 
|| _removal of old package_ || _"old but not new" package files removed_ ||
|| %postun of old package || - ||
|| %posttrans of new package || postinst configure most-recently-configured-version ||

Correspondence here is sketchy, due to the different models: RPM basically does an install followed by an erase, whereas DEB considers the upgrade as a single operation; thus, the "post-install" ({{{%post}}} vs. {{{postinst}}}) is done in very different places in the two models.

Finally the arguments are different:

  * RPM passes the installation count to the scriptlets which implicitly indicates install vs. upgrade, whereas DEB uses a sum type.
  * RPM does not pass the previous version information; recent versions of RPM can be called from scriptlets but presumably {{{rpm -q}}} will return a different result after the _new package installed_ step in the above chain.

= Footnotes =

== 1 ==

{{{new-postrm failed-upgrade old-version}}} is invoked if {{{old-postrm upgrade new-version}}} fails, so one can ensure the new postrm is always called if desired.