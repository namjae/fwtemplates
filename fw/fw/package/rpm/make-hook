#! /bin/sh

#---------------------------------------------------------------------
#                           chicken and egg                           
#---------------------------------------------------------------------

test -f "${FW_ROOT}/share/fw/sh/fw-find.sh" && fws="${FW_ROOT}/share/fw/sh/fw-find.sh"
test -f "fw/sh/fw-find.sh" && fws="fw/sh/fw-find.sh"
test -f "fw.local/sh/fw-find.sh" && fws="fw.local/sh/fw-find.sh"
test ! -z "$fws" || {
  echo "package/rpm/make-hook: fatal: can't locate fw-find.sh" 1>&2
  exit 1
}

. "$fws"

#---------------------------------------------------------------------
#                              routines                               
#---------------------------------------------------------------------

fw_source "package/rpm/make-hook" "sh/fatal.sh"
fw_source "package/rpm/make-hook" "sh/fw-exec.sh"
fw_source "package/rpm/make-hook" "sh/parse-args.sh"
fw_source "package/rpm/make-hook" "sh/validate-args.sh"

#comparescript="perl -e '
#  sub rpmvercmp (\$\$)
#    {
#      my (\$a, \$b) = @_;
#
#      return 0 if \$a == \$b;
#
#      my @aver = split /[^[:alnum]]/, \$a;
#      my @bver = split /[^[:alnum]]/, \$b;
#
#      return 1 if @aver > @bver;
#      return -1 if @aver < @bver;
#
#      my \$cmp = 0;
#
#      foreach my \$av (@aver)
#        {
#          my \$bv = shift @bver;
#
#          if (\$av =~ /[^\d]/ || \$bv =~ /[^\d]/)
#            {
#              \$cmp = (\$av cmp \$bv);
#            }
#          else
#            {
#              \$cmp = (\$av <=> \$bv);
#            }
#
#          return \$cmp if \$cmp;
#        }
#
#      return 0;
#    };
#
#  if (\$ARGV[1] eq \"lt\")
#    {
#      exit ((rpmvercmp (\$ARGV[0], \$ARGV[2]) < 0) ? 0 : 1);
#    }
#  elsif (\$ARGV[1] eq \"le\")
#    {
#      exit ((rpmvercmp (\$ARGV[0], \$ARGV[2]) <= 0) ? 0 : 1);
#    }
#  elsif (\$ARGV[1] eq \"eq\")
#    {
#      exit ((rpmvercmp (\$ARGV[0], \$ARGV[2]) == 0) ? 0 : 1);
#    }
#  elsif (\$ARGV[1] eq \"ne\")
#    {
#      exit ((rpmvercmp (\$ARGV[0], \$ARGV[2]) != 0) ? 0 : 1);
#    }
#  elsif (\$ARGV[1] eq \"ge\")
#    {
#      exit ((rpmvercmp (\$ARGV[0], \$ARGV[2]) >= 0) ? 0 : 1);
#    }
#  elsif (\$ARGV[1] eq \"gt\")
#    {
#      exit ((rpmvercmp (\$ARGV[0], \$ARGV[2]) > 0) ? 0 : 1);
#    }
#
#  die \"bad arguments\";' "
#
#make_post_install () {
#  cat <<EOD
##! /bin/sh
#
#compare_versions="$comparescript"
#
#$preamble
#
#operation=configure
##TODO: THIS WILL ALWAYS RETURN FW_PACKAGE_VERSION ... FAIL! (?)
#canon_most_recently_configured_version="\`rpm -q \"$FW_PACKAGE_NAME\" --queryformat \"%{VERSION}\"\`"
#$configure
#
#$postamble
#
#exit 0
#EOD
#}
#
#make_post_remove () {
#  cat <<EOD
##! /bin/sh
#
#compare_versions="$comparescript"
#
#$preamble
#
#case \"\$1\" in
#  1)
#    operation=upgrade
#    canon_old_version="${FW_PACKAGE_VERSION}"
#    $upgrade
#    ;;
#  0)
#    operation=remove
#    $remove
#    operation=purge
#    $purge
#    ;;
#esac
#
#$postamble
#
#exit 0
#EOD
#}
#    
#make_pre_install () {
#  cat <<EOD
##! /bin/sh
#
#compare_versions="$comparescript"
#
#$preamble
#
#case \"\$1\" in
#  1)
#    operation=install
#    canon_old_version="\`rpm -q \"$FW_PACKAGE_NAME\" --queryformat \"%{VERSION}\"\`"
#    $install
#    ;;
#  2)
#    operation=upgrade
#    canon_old_version="\`rpm -q \"$FW_PACKAGE_NAME\" --queryformat \"%{VERSION}\"\`"
#    $upgrade
#    ;;
#esac
#    
#$postamble
#
#exit 0
#EOD
#}
#
#make_pre_remove () {
#  cat <<EOD
##! /bin/sh
#
#compare_versions="$comparescript"
#
#$preamble
#
#case \"\$1\" in
#  1)
#    operation=upgrade
#    canon_old_version="${FW_PACKAGE_VERSION}"
#    $upgrade
#    ;;
#  0)
#    operation=remove
#    $remove
#    ;;
#esac
#
#$postamble
#
#exit 0
#EOD
#}

#---------------------------------------------------------------------
#                                main                                 
#---------------------------------------------------------------------

# TODO

exit 1

#parse_args "package/rpm/make-hook" "$@"
#
#validate_args "package/rpm/make-hook" "hook" ""
#
#case "$hook" in
#  post-install)
#    make_post_install
#    ;;
#  post-remove)
#    make_post_remove
#    ;;
#  pre-install)
#    make_pre_install
#    ;;
#  pre-remove)
#    make_pre_remove
#    ;;
#  *)
#    echo "package/rpm/make-hook: warning: unsupported hook '$hook'" 1>&2
#    exit 0
#esac
